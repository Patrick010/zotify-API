name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ./api
        pip install pytest-cov

    - name: Create required directories
      run: mkdir -p api/storage api/logs

    - name: Create admin API key file for tests
      run: echo "test-ci-key" > api/src/.admin_api_key

    - name: Run tests with coverage
      run: |
        cd api
        python -m pytest --cov=src/zotify_api --cov-report=xml --cov-fail-under=85

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install ruff
      run: python -m pip install ruff

    - name: Run ruff
      run: python -m ruff check .

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22' # Updated to resolve linter incompatibility
        cache: false # Disable caching as there are no dependencies

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        # Downgrade to a known stable version to avoid linter/toolchain bugs
        version: v1.55.2
        working-directory: snitch

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ./api

    - name: Run mypy
      run: |
        cd api
        python -m mypy --config-file mypy.ini src tests

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ./api

    - name: Run bandit
      run: |
        cd api
        python -m bandit -r . -c bandit.yml

    - name: Run safety
      run: |
        pip install "safety<3.0.0"
        python -m safety check --ignore=51167 --ignore=77740

  doc-linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all history for git diff to work

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Run documentation linter
      run: python3 ${{ github.workspace }}/scripts/linter.py
