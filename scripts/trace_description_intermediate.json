{
  "/root/zotify-API/README.md": "Zotify API is a powerful, extensible backend for managing and interacting with your music library. The platform is designed for developers, automators, and power-users who want to build sophisticated workflows for their music collections.",
  "/root/zotify-API/AGENTS.md": "DOC-067 is a free and open-source software development tool. It is designed to make software development as frictionless and automated as possible. There are three main components: the 'Agents.md' document, the 'Automation Scripts' and the 'Config' file.",
  "/root/zotify-API/scripts/CODE_FILE_INDEX.md": "This file is auto-generated. Do not edit manually. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/snitch/README.md": "Snitch is a short-lived, local OAuth callback HTTP listener written in Go. It is a subproject of Zotify-API. The primary purpose of Snitch is to solve the Spotify authentication redirect problem.",
  "/root/zotify-API/snitch/CODE_FILE_INDEX.md": "This file is auto-generated. Do not edit manually. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/snitch/DOCS_INDEX.md": "This file is auto-generated. Do not edit manually. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/LOGGING_TRACEABILITY_MATRIX.md": "This document maps the high-level requirements for the new Extendable Logging System to the design artifacts that specify the solution and the backlog tasks that will implement it. This ensures that all requirements are met and provides end-to-end traceability for the feature.",
  "/root/zotify-API/project/DEPENDENCIES.md": "The goal is to maintain a lean, stable, and secure project. Each new dependency introduces potential security vulnerabilities, maintenance overhead, and licensing complexities.",
  "/root/zotify-API/project/USECASES.md": "Document captures realistic, demanding user scenarios that the API should ideally support. These use cases go beyond basic search and download, covering complex playlist operations, and end-to-end synchronization.",
  "/root/zotify-API/project/HIGH_LEVEL_DESIGN.md": "This document outlines the high-level architecture, scope, and guiding principles for the ongoing Zotify API refactor. It serves as a blueprint for the development team to maintain alignment with long-term goals. The refactor aims to transition all subsystems to a dedicated service layer.",
  "/root/zotify-API/project/LOGGING_SYSTEM_DESIGN.md": "This document outlines the architecture for a new, extendable logging system for the Zotify API. The goal is to create a robust, centralized service that can handle multiple logging scenarios in a pluggable and maintainable way.",
  "/root/zotify-API/project/PID.md": "Zotify API was originally built as a lightweight wrapper for a single use case. It lacked persistent storage, modularity, and the flexibility to support multiple providers. This project aims to refactor and expand the API to form a robust, scalable, and provider-agnostic backend.",
  "/root/zotify-API/project/LESSONS-LEARNT.md": "Documentation highlights key takeaways from the Zotify API project across all phases, with direct references to where the lesson was first applied or discussed.",
  "/root/zotify-API/project/LOW_LEVEL_DESIGN.md": "The Low-Level Design (LLD) describes the specific implementation details of the Zotify API's subsystems. The LLD focuses on the new provider-agnostic architecture. The table provides a canonical overview of all planned and implemented endpoints.",
  "/root/zotify-API/project/SECURITY.md": "The Zotify API platform is designed with a \"secure by default\" philosophy. The platform uses a standard OAuth2 PKCE flow to authenticate with the Spotify API. The Flexible Logging Framework includes several features to enhance security.",
  "/root/zotify-API/project/PROJECT_REGISTRY.md": "Document provides a high-level overview of the Continuous Integration / Continuous Deployment (CI/CD) pipeline for this project. It is intended for a project management and stakeholder audience, explaining the purpose and value of each quality gate in the development process.",
  "/root/zotify-API/project/CICD.md": "This document provides a high-level overview of the Continuous Integration / Continuous Deployment (CI/CD) pipeline. It explains the purpose and value of each quality gate in the development process. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/project/QA_GOVERNANCE.md": "Document is the single source of truth for all Quality Assurance (QA) and governance policies. All contributors are required to understand and adhere to these rules. The policies outlined here are enforced automatically by the project's tooling.",
  "/root/zotify-API/project/TASK_CHECKLIST.md": "This is a mandatory pre-submit checklist. All applicable steps must be verified before your work is considered complete. For ALL Changes (including documentation)",
  "/root/zotify-API/project/FUTURE_ENHANCEMENTS.md": "This document serves as a dedicated \"parking lot\" for new ambitions and feature ideas that have emerged during development. It is meant to capture long-term vision without disrupting the alignment and verification process of active development phases.",
  "/root/zotify-API/project/EXECUTION_PLAN.md": "This document provides a detailed breakdown of the tasks required to fulfill the [Canonical Roadmap](./ROADMAP.md). It includes a mandatory step for every phase.",
  "/root/zotify-API/project/PROJECT_BRIEF.md": "The project aims to refactor the existing Zotify-based API into a professional-grade, multi-service media automation platform. The original API was tightly coupled to Spotify and suffered from several architectural deficiencies. The project addresses these issues through a structured audit and a series of architectural refactors.",
  "/root/zotify-API/project/ALIGNMENT_MATRIX.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions: <!-- ID: DOC-083 --> # Alignment Matrix.",
  "/root/zotify-API/project/PROCESS_AUTOMATION.md": "This document describes the automation processes that maintain structural consistency, metadata accuracy, and traceability across the repository. The goal is to ensure that **every artifact** — code, documentation, configuration, or test — is **discoverable, documented, and linked to the correct indices automatically.",
  "/root/zotify-API/project/PROJECT_PLAN.md": "Zotify API project is a strategic refactor and enhancement of the original Zotify CLI tool. Its purpose is to transform the tool into a robust, scalable, and provider-agnostic API framework. This enables advanced automation, third-party integrations, and a choice of interfaces.",
  "/root/zotify-API/project/ROADMAP.md": "Zotify API Platform Roadmap is a high-level, strategic roadmap for the platform. It outlines the development trajectory from the current stable state to future enhancements. The roadmap is organized by project phase and outlines key concepts.",
  "/root/zotify-API/project/BACKLOG.md": "This document serves as the tactical backlog for the Zotify API Platform. It contains a list of clearly defined, approved tasks for future implementation. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/project/ONBOARDING.md": "This document is intended to bring a new developer up to speed on the project. It provides guidance for understanding the architecture, workflows, and key artifacts. It is mandatory that developers review these materials in order to efficiently onboard.",
  "/root/zotify-API/project/USECASES_GAP_ANALYSIS.md": "This document compares the **desired capabilities** from `USECASES.md with the **current** Zotify API implementation. The goal is to identify missing or partial functionality that must be addressed.",
  "/root/zotify-API/project/LOGGING_PHASES.md": "Document is the **authoritative tracker** for the Extendable Logging System. It defines each phase, current status, deliverables, and governance rules. This file ensures that logging development is transparent, traceable, and never “lost in the cracks”",
  "/root/zotify-API/Gonk/CODE_FILE_INDEX.md": "This file is auto-generated. Do not edit manually. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/MIGRATIONS.md": "This file tracks the database migrations for the Zotify API. Add a 'notifications_enabled' column to the `user_preferences' table. This adds a 'server_default' of 'true' to handle existing rows.",
  "/root/zotify-API/templates/LOGGING_TRACEABILITY_MATRIX.md": "This document maps the high-level requirements for the new <FEATURE_NAME> to the design artifacts that specify the solution and the backlog tasks that will implement it. This ensures that all requirements are met and provides end-to-end traceability for the feature.",
  "/root/zotify-API/templates/HIGH_LEVEL_DESIGN.md": "This document outlines the high-level architecture, scope, and guiding principles. It serves as a blueprint for the development team to maintain alignment with long-term goals. The project aims to transition all subsystems to a dedicated service layer architecture.",
  "/root/zotify-API/templates/AGENTS.md": "This document and its associated scripts are designed to solve a common problem in software development: ensuring documentation stays synchronized with the code. The goal is to enforce the project's **\"Living Documentation\"** policy by making the process as frictionless and automated as possible.",
  "/root/zotify-API/templates/USECASES.md": "This document captures realistic, demanding user scenarios that the API should ideally support. These use cases go beyond basic operations, covering complex data manipulation, advanced processing, and end-to-end synchronization. Summarize the following documentation clearly and concisely. Highlight key concepts and functions: # <PROJECT_NAME> – User-Driven Use Cases.",
  "/root/zotify-API/templates/LOGGING_SYSTEM_DESIGN.md": "This document outlines the architecture for a new, extendable logging system for the <PROJECT_NAME>. The goal is to create a robust, centralized service that can handle multiple logging scenarios in a pluggable and maintainable way.",
  "/root/zotify-API/templates/HANDOVER_BRIEF.md": "This document provides a handover for the next developer who will be working on the project. It summarizes the work completed, the current state of the project, and the planned next steps.",
  "/root/zotify-API/templates/LOW_LEVEL_DESIGN.md": "Documentation highlights key concepts and functions of the LLD. LLD describes the specific implementation details of the <PROJECT_NAME> subsystems.",
  "/root/zotify-API/templates/PID.md": "This project aims to refactor and expand an existing system to form a robust, scalable, and provider-agnostic backend for automation, and developer tooling. The goal is to transition the project from a single-purpose tool into a fully modular framework.",
  "/root/zotify-API/templates/LESSONS-LEARNT.md": "Covers insights from initial planning (Phase 0) through current active development. Includes direct references to where the lesson was first applied or discussed.",
  "/root/zotify-API/templates/CICD-DEV.md": "This document provides a comprehensive technical overview of the CI/CD and local linting infrastructure. It is designed to be a reusable template that can be adapted for other projects. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/templates/SECURITY.md": "The platform uses a standard OAuth2 PKCE flow to authenticate with external services. OAuth tokens (access and refresh) are stored in a dedicated table within the central application database. A Zero Trust model with end-to-end encryption is a good goal for protecting data in transit.",
  "/root/zotify-API/templates/INITIATION.md": "This document outlines the standard process for initiating the documentation for a new project. Following this process ensures that all new projects start with a consistent, robust, and traceable documentation structure. This documentation structure adheres to PRINCE2 best practices.",
  "/root/zotify-API/templates/PROJECT_REGISTRY.md": "This document serves as the master file, or single source of truth, for tracking all key documents, records, and artifacts for the <PROJECT_NAME>. It provides a centralized index for all stakeholders to ensure traceability and transparency. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/templates/TASK_CHECKLIST.md": "This is a mandatory pre-submit checklist. All applicable steps must be verified before your work is considered complete. For ALL Changes (including documentation) the checklist includes: Task Qualification, Documentation, Process & Workflow, and Security.",
  "/root/zotify-API/templates/CICD-PROJ.md": "This document provides a high-level overview of the Continuous Integration / Continuous Deployment (CI/CD) pipeline. It is intended for a project management and stakeholder audience, explaining the purpose and value of each quality gate in the development process.",
  "/root/zotify-API/templates/FUTURE_ENHANCEMENTS.md": "This document serves as a dedicated \"parking lot\" for new ambitions and feature ideas that have emerged during development. It is meant to capture long-term vision without disrupting the alignment and verification process of the active development phases.",
  "/root/zotify-API/templates/ENDPOINTS.md": "This file lists all public API endpoints for the <PROJECT_NAME> generated from the OpenAPI schema. It provides a high-level reference for developers, operators, and auditors.",
  "/root/zotify-API/templates/PROJECT_BRIEF.md": "This project aims to refactor and expand an existing system to form a robust, scalable, and provider-agnostic backend for automation, and developer tooling. The goal is to transition the project from a single-purpose tool into a fully modular framework.",
  "/root/zotify-API/templates/EXECUTION_PLAN.md": "This document provides a detailed breakdown of the tasks required to fulfill the [Canonical Roadmap](./ROADMAP.md). Phase 1: Foundational setup. Phase 2: Core API & Testing. Phase 3: Key Service Integration. Phase 4: Key third-party integration.",
  "/root/zotify-API/templates/API-DEVELOPER-GUIDE.md": "This document is for developers who wish to contribute directly to the [Project Name] codebase. It outlines the development workflow, architectural patterns, and quality standards required for all contributions. For information on how to consume or integrate with the API, see the SYSTEM_INTEGRATION_GUIDE.",
  "/root/zotify-API/templates/_new project prompt.txt": "Review the current project documentation directory against the full template set to make it follow PRINCE2 principles. Add the missing files named in onboarding to the project, but not all files are always applicable.",
  "/root/zotify-API/templates/SYSTEM-INTEGRATION-GUIDE.md": "This document provides essential information for developers who need to integrate with or consume the API. It covers project setup, testing procedures, core architectural principles, and documentation conventions. For developers looking to contribute to the API itself, please see the `API-DEVELOPER-GUIDE.",
  "/root/zotify-API/templates/TRACEABILITY_MATRIX.md": "Traceability Matrix – <PROJECT_NAME> – < PROJECT_ NAME> – “Traceability Matrix” – ‘ Traceability’ – � ‘Trace’ - ‘Gap’. For a high-level summary of feature coverage and gaps, see the [`USECASES_GAP_ANAL",
  "/root/zotify-API/templates/ROADMAP.md": "This document provides a high-level, strategic roadmap for the <PROJECT_NAME>. It is organized by major themes and outlines the development trajectory from the current stable state to future enhancements. This document is not a detailed task tracker.",
  "/root/zotify-API/templates/BACKLOG.md": "This document serves as the tactical backlog for the <PROJECT_NAME>. It contains a list of clearly defined, approved tasks for future implementation. The process for managing this backlog is defined in the `PID.md`",
  "/root/zotify-API/templates/ONBOARDING.md": "Project Onboarding Flow is intended to bring a new developer up to speed on the project, providing guidance for understanding the architecture, workflows, and key artifacts.",
  "/root/zotify-API/templates/USECASES_GAP_ANALYSIS.md": "The goal is to identify missing or partial functionality that must be addressed to meet user expectations. Summarize the following documentation clearly and concisely. Highlight key concepts and functions. # Gap Analysis – <PROJECT_NAME> vs. User Use Cases.",
  "/root/zotify-API/templates/LOGGING_PHASES.md": "This file is the **authoritative tracker** for the <FEATURE_NAME> System. It defines each phase, current status, deliverables, and governance rules. This file ensures that development on this feature is transparent, traceable, and never “lost in the cracks”",
  "/root/zotify-API/templates/proposals/LOW_CODE_PROPOSAL.md": "The proposal is intended as a replacement for the plugin system described here. It is based on a standard packaging metadata system like Python's 'entry_points' The proposal includes a high-level Implementation Plan.",
  "/root/zotify-API/templates/proposals/HOME_AUTOMATION_PROPOSAL.md": "The proposal is intended as a replacement for the plugin system described here. It is based on a standard packaging metadata system like Python's 'entry_points' The proposal includes a high-level Implementation Plan.",
  "/root/zotify-API/templates/proposals/DYNAMIC_PLUGIN_PROPOSAL.md": "The proposal is intended as a replacement for the plugin system described here. It is based on a standard packaging metadata system like Python's 'entry_points' The proposal includes a high-level Implementation Plan.",
  "/root/zotify-API/templates/proposals/MULTI_SOURCE_METADATA_PROPOSAL.md": "The proposal is intended as a replacement for the plugin system described here. It is based on a standard packaging metadata system like Python's 'entry_points' The proposal includes a high-level Implementation Plan.",
  "/root/zotify-API/templates/audit/FIRST_AUDIT.md": "The audit was conducted in multiple stages. The final report should be the result of a complete restart of the audit process, executed with meticulous, file-by-file diligence.",
  "/root/zotify-API/templates/audit/HLD_LLD_ALIGNMENT_PLAN.md": "This document outlines the plan to align the High-Level Design (HLD) and Low-level Design (LLD) with the current implementation of the <PROJECT_NAME>. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/templates/audit/AUDIT_TRACEABILITY_MATRIX.md": "This document tracks the alignment between the features and architectural principles. Summarize the following documentation clearly and concisely. Highlight key concepts and functions: # HLD/LLD Traceability Matrix.",
  "/root/zotify-API/templates/audit/AUDIT-PHASE-1.md": "The audit phase is designed to ensure that all quality gates and automation are in place to prevent future design drift. The goal is to confirm that the key \"source of truth\" documents accurately reflect the state of the codebase.",
  "/root/zotify-API/templates/audit/audit-prompt.md": "The audit report must be generated with an extreme level of detail. Summaries, wildcards, or aggregations are strictly forbidden. Summarize the documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/templates/audit/PHASE_1_TRACEABILITY_MATRIX.md": "This document maps the high-level goals for Phase <Phase_Number> to the concrete action plan and the specific backlog tasks created to implement them. This ensures end-to-end traceability for the initiative. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/templates/logs/ACTIVITY.md": "Assignee:** <TEAM_MEMBER] Objective: To resolve a configuration issue that was blocking progress on a key feature. Outcome- **Investigation:** The root cause was identified as a misconfigured path in a settings file.",
  "/root/zotify-API/templates/logs/SESSION_LOG.md": "The log serves as a detailed log of activities and findings from a specific work session. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/templates/logs/CURRENT_STATE.md": "Project State as of the most recent work session. Known issues, risks, or blockers that are currently affecting the project. Pending Work: Next Immediate Steps.",
  "/root/zotify-API/api/docs/CODE_QUALITY_INDEX.md": "Each file is assessed against the rubric defined below. Each file is assigned two independent quality scores: one forDocumentation (`Doc Score`) and one for Code (`Code Score'",
  "/root/zotify-API/api/docs/DOCS_QUALITY_INDEX.md": "This file is auto-generated. Do not edit manually. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/CODE_FILE_INDEX.md": "This file is auto-generated. Do not edit manually. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/CHANGELOG.md": "All notable changes to this project will be documented in this file. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/MASTER_INDEX.md": "This document serves as the central index for all documentation related to the Zotify API. All new documentation files must be registered here. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/manuals/SYSTEM_INTEGRATION_GUIDE.md": "Zotify API is a developer-centric framework built around the original Zotify CLI client. It uses Librespot for authentication and media retrieval. The API exposes powerful, automation-oriented functionality that Spotify’s own Web API does not offer.",
  "/root/zotify-API/api/docs/manuals/LOGGING_GUIDE.md": "Zotify Flexible Logging Framework: Developer's Guide. Highlight key concepts and functions. Summarize the following documentation.",
  "/root/zotify-API/api/docs/manuals/CICD.md": "This document provides a comprehensive overview of the CI/CD and local linting infrastructure used in this project. It is designed to be a reusable template that can be adapted for other projects.",
  "/root/zotify-API/api/docs/manuals/OPERATOR_MANUAL.md": "Zotify API - Operator's Manual is available on GitHub. This manual provides detailed, actionable guidance for deploying, configuring, and maintaining the Zotify API.",
  "/root/zotify-API/api/docs/manuals/USER_MANUAL.md": "This manual explains how to consume the Zotify API to manage your music library. It is intended for end-users or client application developers. For a full, interactive list of all endpoints, please see the [Swagger UI documentation]",
  "/root/zotify-API/api/docs/manuals/API_DEVELOPER_GUIDE.md": "This document is for developers who wish to contribute directly to the Zotify API codebase. It outlines the development workflow, architectural patterns, and quality standards required for all contributions.",
  "/root/zotify-API/api/docs/manuals/ERROR_HANDLING_GUIDE.md": "This guide explains how to work with the Generic Error Handling Module. This module is the centralized system for processing all unhandled exceptions. All errors are automatically formatted into a standard JSON response for APIs.",
  "/root/zotify-API/api/docs/system/REQUIREMENTS.md": "This document lists the system and software requirements for running the Zotify API and its related tools. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/system/PRIVACY_COMPLIANCE.md": "Zotify respects user privacy and commits to protecting personal data. The primary piece of Personally Identifiable Information (PII) handled by the Zotify API is the user's Spotify OAuth Token. The security of this sensitive data is dependent on the security of the database file itself.",
  "/root/zotify-API/api/docs/system/INSTALLATION.md": "This installation guide is for developers and operators who want to run the API from the source code. It is highly recommended to use a Python virtual environment. By default, the application runs in `production' mode.",
  "/root/zotify-API/api/docs/system/ERROR_HANDLING_DESIGN.md": "This document provides the detailed technical design for the Generic Error Handling Module. This module serves as the central, platform-wide mechanism for intercepting, processing, and responding to all unhandled exceptions. Standardized Error Schema will be formatted into a standard API Schema.",
  "/root/zotify-API/api/docs/providers/SPOTIFY.md": "This document describes the implementation of the Spotify provider connector. It is the first provider to be integrated into the new provider-agnostic architecture. The current authentication flow is specific to Spotify's OAuth 2.0 implementation.",
  "/root/zotify-API/api/docs/reference/API_REFERENCE.md": "This document provides a detailed reference for the Zotify API. It is generated from the OpenAPI 3.0 specification. Endpoints for direct data export and deletion are planned for a future release.",
  "/root/zotify-API/api/docs/reference/source/METADATA.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/NETWORK_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/FEATURE_SPECS.md": "This document serves as the master index for all detailed feature specifications for the Gonk platform. The purpose of this system is to ensure that every feature, endpoint, and function in the codebase has a corresponding, discoverable, and up-to-date specification.",
  "/root/zotify-API/api/docs/reference/source/SPOTIFY_CONNECTOR.py.md": "Highlight key concepts and functions: <!-- ID: API-179 --> spotify_connector.py.",
  "/root/zotify-API/api/docs/reference/source/CONFIG_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/FUNCTIONAL_TEST.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/FORMATTER.py.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions: <!-- ID: API-143 -->",
  "/root/zotify-API/api/docs/reference/source/ACTIONS____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/CONSOLE_HANDLER.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SPOTI_CLIENT.py.md": "Highlight key concepts and functions. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/api/docs/reference/source/PLAYLISTS.py.md": "The API-167 playlists are designed to highlight key concepts and functions. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/api/docs/reference/source/DOWNLOAD.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/GENERATE_OPENAPI.py.md": "Documentation clearly and concisely. Highlight key concepts and functions. Summarize the following documentation.",
  "/root/zotify-API/api/docs/reference/source/SERVICES____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/NETWORK.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/GENERIC.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/AUTH.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SYSTEM.py.md": "The API-183 system is designed to be used in the Python programming language. The documentation is written in a clear and concise way.",
  "/root/zotify-API/api/docs/reference/source/TRIGGERS.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/PLAYLISTS_SERVICE.py.md": "Playlists_service.py is an API-168 service. It provides playlists and playlists.py as a service. The API is intended to be used in conjunction with other services.",
  "/root/zotify-API/api/docs/reference/source/HOOKS.py.md": "Documentation for hooks.py is written in Python. Summarize the following documentation clearly and concisely. Highlight key concepts and functions: <!-- ID: API-150 -->.",
  "/root/zotify-API/api/docs/reference/source/CRUD.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/NOTIFICATIONS.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SEARCH.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SPOTIFY.py.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/CACHE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/GLOBALS.py.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/AUTH_STATE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/AUDIT_API.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/LOGGING_FRAMEWORK____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/LINTER.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/MAIN.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/WEBHOOK.py.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/DB.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/LOG_CRITICAL.py.md": "Documentation for log_critical.py should be clear and concise. Highlight key concepts and functions. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/api/docs/reference/source/GENERATE_SOURCE_DOCS.py.md": "Documentation should be clearly and concisely. Highlight key concepts and functions: <!-- ID: API-147 --> # generate_source_ docs.py # generate.source_documents.py",
  "/root/zotify-API/api/docs/reference/source/USER_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/ROUTES____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/PROVIDERS____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/APP.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/METADATA_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/DATABASE_JOB_HANDLER.py.md": "Documentation clearly and concisely. Highlight key concepts and functions. Summarize the following documentation.",
  "/root/zotify-API/api/docs/reference/source/JSON_AUDIT_HANDLER.py.md": "Documentation clearly and concisely. Highlight key concepts and functions. Summarize the following documentation.",
  "/root/zotify-API/api/docs/reference/source/SESSION.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/ERROR_HANDLER____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/AUDIT_ENDPOINTS.py.md": "Highlight key concepts and functions. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/api/docs/reference/source/TRACKS_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/LOGGING_CONFIG.py.md": "Logging_config.py is an API-153 API for the Python programming language. It is intended to be used in conjunction with other Python programming languages such as Python, Ruby, and Python 3.",
  "/root/zotify-API/api/docs/reference/source/DEPS.py.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SYNC_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/APP.js.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SNITCH.go.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SYNC.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/USER.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/LOGGING_SCHEMAS.py.md": "logging_schemas.py is a Python application programming interface (API) for logging data. The API is written in Python and has a number of functions. Logging data is stored in a log file called log.py.",
  "/root/zotify-API/api/docs/reference/source/SCHEMAS.py.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/MODELS.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/LOGGING_SERVICE.py.md": "Logging_service.py is an API-157 service. The documentation is written in Python. It includes code examples.",
  "/root/zotify-API/api/docs/reference/source/CONFIG_MODELS.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/SERVICE.py.md": "Service.py is a Python application that allows users to create, edit, and delete files. The API-174 version of the service is called service.py174.",
  "/root/zotify-API/api/docs/reference/source/GENERATE_ENDPOINTS_DOC.py.md": "Documentation should be clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/LOGGING_HANDLERS____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/WEBHOOKS.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/BASE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/DOWNLOAD_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/NOTIFICATIONS_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/CACHE_SERVICE.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/DATABASE____INIT__.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/TRACKS.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/FILTERS.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/DOWNLOADS.py.md": "Documentation is written in Python. Summarize the following documentation clearly and concisely. Highlight key concepts and functions: <!-- ID: API-139 -->.",
  "/root/zotify-API/api/docs/reference/source/TEST_AUTH_FLOW.py.md": "Documentation clearly and concisely. Highlight key concepts and functions: <!-- ID: API-184# test_auth_flow.py -->",
  "/root/zotify-API/api/docs/reference/source/REQUEST_ID.py.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/source/CONFIG.py.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/api/docs/reference/features/DEVELOPER_FLEXIBLE_LOGGING_FRAMEWORK.md": "Flexible Logging Framework (API-116) extends the current global error handling system into a fully programmable, developer-facing logging framework that becomes part of the API framework itself. Its purpose is to allow fine-grained control over what gets logged, where it gets logged and under what conditions.",
  "/root/zotify-API/api/docs/reference/features/AUTOMATED_DOCUMENTATION_WORKFLOW.md": "Automated Documentation Workflow & Logging is a tool to streamline the project's core \"living documentation\" policy. This system ensures that all code changes are accompanied by corresponding documentation updates and that all work is logged in a consistent, structured manner. It is a developer tooling feature and has no API endpoints.",
  "/root/zotify-API/api/docs/reference/features/PROVIDER_AGNOSTIC_EXTENSIONS.md": "The API can already work across multiple providers. There is currently no formalized structure for documenting the expected behavior, capabilities, and metadata handling of each provider integration. Formalizing specifications ensures clarity, traceability, and consistent expectations.",
  "/root/zotify-API/api/docs/reference/features/PROVIDER_OAUTH.md": "The Provider-Agnostic OAuth2 Authentication Flow is designed for user-interactive logins via a web browser popup. This allows the API to support authentication with multiple music service providers (e.g., Spotify, and future providers) without requiring changes to the core API routes.",
  "/root/zotify-API/api/src/zotify_api.egg-info/dependency_links.txt": "Empty file.",
  "/root/zotify-API/api/src/zotify_api.egg-info/top_level.txt": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions",
  "/root/zotify-API/api/src/zotify_api.egg-info/SOURCES.txt": "Highlight key concepts and functions in the documentation. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/api/docs/reference/features/AUTHENTICATION.md": "Authentication via Static Admin API Key is a simple, effective security mechanism to protect all API endpoints from unauthorized access. This ensures that only trusted clients or users can interact with the API, preventing public abuse and unauthorized data access.",
  "/root/zotify-API/api/src/zotify_api.egg-info/requires.txt": "Highlight key concepts and functions. Summarize the following documentation clearly and concisely. Highlight key Concepts and functions: fastapi, fast, fastapi.",
  "/root/zotify-API/Gonk/GonkUI/README.md": "GonkUI is a web-based development and testing tool designed specifically for the Zotify API. It provides a rich user interface to streamline common development workflows and facilitate interactive API testing.",
  "/root/zotify-API/Gonk/GonkUI/DOCS_INDEX.md": "This file is auto-generated. Do not edit manually. Summarize the following documentation. Highlight key concepts and functions.",
  "/root/zotify-API/Gonk/GonkCLI/DOCS_INDEX.md": "This document is the master index for all documentation related to the GonkCLI component. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/Gonk/GonkUI/GonkUI.egg-info/dependency_links.txt": "Empty file.",
  "/root/zotify-API/Gonk/GonkCLI/README.md": "The Gonk Command Line Interface (CLI) is a tool for interacting with the Zotify API from the command line. It is intended for developers and power users who want to script interactions with the platform.",
  "/root/zotify-API/Gonk/GonkUI/GonkUI.egg-info/top_level.txt": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions",
  "/root/zotify-API/Gonk/GonkUI/GonkUI.egg-info/requires.txt": "Summarize the documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/Gonk/GonkUI/GonkUI.egg-info/SOURCES.txt": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions: README.md.",
  "/root/zotify-API/Gonk/GonkUI/docs/CHANGELOG.md": "All notable changes to this project will be documented in this file. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/Gonk/GonkUI/docs/ARCHITECTURE.md": "The Gonk/GonkUI is a standalone web application built with Flask. It is designed to be completely independent of the main Zotify API application, acting only as an external client. This allows the UI to control the lifecycle of the database browser. The main UI embeds the `sqlite-web` interface using an `<iframe>`.",
  "/root/zotify-API/Gonk/GonkUI/docs/USER_MANUAL.md": "Gonk Test UI is a free and open-source Python application. It can be used to test and interact with the Zotify API. It is available in Python 3.10 or higher.",
  "/root/zotify-API/Gonk/GonkUI/docs/CONTRIBUTING.md": "If you have a suggestion or find a bug, please open an issue to discuss it. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/proposals/LOW_CODE_PROPOSAL.md": "This document proposes the official endorsement and creation of a dedicated integration for low-code platforms. It would involve creating a new, separate project: a Node-RED \"contrib\" package. Each node would represent a core piece of Zotify API functionality.",
  "/root/zotify-API/project/proposals/HOME_AUTOMATION_PROPOSAL.md": "This document proposes the official endorsement and creation of a dedicated integration for home automation platforms. The goal is to create a custom Home Assistant \"Integration\" ( component) that would expose Zotify entities and services.",
  "/root/zotify-API/project/proposals/NEW_PROPOSAL.md": "This is a test proposal to verify the linter functionality. Summarize the following documentation clearly and",
  "/root/zotify-API/project/proposals/TRACE_INDEX_SCHEMA_FIX.md": "Schema fix for TRACE_INDEX.yml. The previous version listed all *expected* indexes for both registered and unregistered files. A clearer distinction is needed between where a file *is* registered versus where it *should be* registered.",
  "/root/zotify-API/project/proposals/DBSTUDIO_PLUGIN.md": "Currently, database inspection for the Zotify API is handled by 'sqlite-web' This approach has several limitations, including a lack of modularity and limited access control. This document proposes the creation of a 'dynamic' 'dbstudio' plugin that can be dynamically mounted on the FastAPI application.",
  "/root/zotify-API/project/proposals/DYNAMIC_PLUGIN_PROPOSAL.md": "The current Flexible Logging Framework is highly configurable but not easily extensible. Developers can create their own custom sink implementations in separate, installable Python packages. The Zotify API will then be able to automatically discover and use these custom sinks if they are installed in the same Python environment.",
  "/root/zotify-API/project/proposals/GOVERNANCE_AUDIT_REFACTOR.md": "This document proposes a comprehensive refactoring of the repository's governance audit script. The goal is to elevate the script from a basic inventory tool into a complete, automated audit system that enforces the project's \"Living Documentation\" policy with greater precision.",
  "/root/zotify-API/project/proposals/TRACE_INDEX_SCHEMA_ADAPTATION.md": "The initial version of the `TRACE_INDEX.yml` file had an inconsistent Schema. This inconsistency makes parsing and programmatic use of the file more complex than necessary. This document proposes and describes the implementation of a Schema adaptation for the file to make it fully uniform and more robust.",
  "/root/zotify-API/project/proposals/QA_GATE_IMPLEMENTATION_PLAN.md": "This document outlines the phased implementation plan for creating a professional-level, multi-language QA Gate for the project. This system will complement the current, simpler linter with a robust set of checks for code quality, documentation quality, and index consistency. The implementation is broken down into the following phases to ensure a structured rollout.",
  "/root/zotify-API/project/proposals/GONKUI_PLUGIN.md": "Document: Dynamic GonkUI plugin for Developer UI. Date: 2025-09-23. Author:** Jules.",
  "/root/zotify-API/project/reports/REPO_MANIFEST.md": "Summarizes missing or mismatched IDs clearly by type (doc/code/config) Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/proposals/MULTI_SOURCE_METADATA_PROPOSAL.md": "Proposal proposes the creation of a **Plugin-Driven Multi-Source Metadata System. This new core component of the Zotify Platform will transform it from a single-source API into a powerful, extensible, and unified engine for searching and managing music metadata.",
  "/root/zotify-API/project/reports/PROJECT_DOCUMENT_ALIGNMENT.md": "Project Document Alignment Report. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/reports/PROJECT_AUDIT_FINAL_REPORT.md": "Automatically paste relevant sections from PROJECT_DOCUMENT_ALIGNMENT.md. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/project/reports/CONTENT_ALIGNMENT_REPORT.md": "This report summarizes the results of the content-level alignment initiative. The goal was to ensure that every registered artifact in the project is traced to a canonical feature or component ID. Each entry is now fully integrated into the `ALIGNMENT_MATRIX.",
  "/root/zotify-API/project/reports/ARCHIVE_ALIGNMENT_MATRIX_OLD.md": "Documentation. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/reports/ALIGNMENT_VALIDATION_REPORT.txt": "Documentation. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/reports/GOVERNANCE_DEMO_REPORT.md": "This report documents a live demonstration of the refactored governance audit script. The purpose of this demonstration is to verify that the new script correctly identifies common compliance violations. The demonstration consists of two main tests: Unregistered File and Stub File.",
  "/root/zotify-API/project/reports/DESCRIPTION_COMPLIANCE_REPORT.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions. Document ID: DOC-059.",
  "/root/zotify-API/project/reports/HANDOVER_BRIEF_JULES.md": "This work session focused on executing a comprehensive, repository-wide content alignment initiative. The primary goal was to establish an end-to-end traceability system, ensuring that every registered project artifact is mapped to a canonical feature ID. This creates a fully linked and verifiable relationship between the project's backlog, high-level design, and the alignment matrix.",
  "/root/zotify-API/project/reports/HANDOVER_BRIEF_CHATGTP.md": "The project is currently in **API Phase 5b**, with governance, QA, and documentation workflows partially implemented and audited. This session has finalized **workflow mappings, incremental task definitions, and a repo manifest that captures full repo content offline.",
  "/root/zotify-API/project/logs/ACTIVITY.md": "The root cause of the pipeline failure was a combination of incorrect data in the tag inventory and scripts with flawed logic. The check is now enforced in the CI pipeline via the main linter.",
  "/root/zotify-API/project/logs/SESSION_LOG.md": "Documentation highlights key concepts and functions of the project. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/project/logs/CURRENT_STATE.md": "The pipeline is now stable. The next developer can proceed with feature work, following the established traceability patterns.",
  "/root/zotify-API/project/process/GAP_ANALYSIS_TEMPLATE.md": "Documentation Summarize the following documentation clearly and concisely. Highlight key concepts and functions. Gap Analysis: [Feature/Process Name] encompass the current situation in detail.",
  "/root/zotify-API/project/archive/TRACEABILITY_MATRIX.md": "This file has been migrated into ALIGNMENT_MATRIXmd and is no longer maintained. This matrix provides a high-level bridge between the strategic themes outlined in the ROADMAP.md and the operational phases in the `EXECUTION_PLAN.md. Its purpose is to make any drift between the two documents immediately obvious.",
  "/root/zotify-API/project/archive/audit/FIRST_AUDIT.md": "The report is the result of a complete restart of the audit process, executed with the meticulous, file-by-file diligence originally requested. The project's documentation is so fragmented and contradictory that it is impossible to gain an accurate understanding without a deep, forensic analysis of the entire repository.",
  "/root/zotify-API/project/archive/audit/PHASE_4_TRACEABILITY_MATRIX.md": "This document maps the high-level goals for Phase 4, as defined in the Super-Lint Plan. It ensures end-to-end traceability for the \"Enforce & Automate\" initiative.",
  "/root/zotify-API/project/archive/audit/HLD_LLD_ALIGNMENT_PLAN.md": "This document outlines the plan to align the High-Level Design (HLD) and Low-level Design (LLD) with the current implementation of the Zotify project. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/archive/audit/AUDIT-PHASE-3.md": "Audit Phase 3: Implementation & Alignment is now closed. Phase 4 (Enforce & Automate) has started.",
  "/root/zotify-API/project/archive/audit/AUDIT-PHASE-4.md": "The project's tooling, processes, and documentation are fully aligned and consolidated. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/archive/audit/AUDIT-phase-2.md": "AUDIT-phase-3: HLD/LLD Alignment Analysis. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/archive/audit/AUDIT_TRACEABILITY_MATRIX.md": "The HLD/LLD Traceability Matrix is fully reconciled. All roadmap themes and execution phases have been mapped. A new backend-agnostic database layer has been implemented.",
  "/root/zotify-API/project/archive/audit/AUDIT-phase-1.md": "This document serves as the new, single source of truth and baseline for all future project planning and development. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/archive/audit/audit-prompt.md": "The audit report must be generated with an extreme level of detail. Summaries, wildcards, or aggregations are strictly forbidden. The final audit document must contain the following sections.",
  "/root/zotify-API/project/archive/audit/AUDIT-PHASE-5.md": "Audit-010: Linter Overhaul and Documentation Process Refinement. Audit-009: Automated Documentation Workflow Tooling.",
  "/root/zotify-API/project/archive/audit/CODE_OPTIMIZATIONPLAN_PHASE_4.md": "This document provides a detailed, step-by-step action plan for implementing the comprehensive code quality and security enforcement mechanism for the Zotify API project. The goals and tasks outlined in this document have been implemented. The Super-Lint will apply to all Python and Go code.",
  "/root/zotify-API/project/archive/docs/snitch/INTEGRATION_CHECKLIST.md": "This document tracks the integration status of various subprojects and components within the Zotify-API ecosystem. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/archive/docs/snitch/phase5-ipc.md": "This document outlines the secure Inter-Process Communication (IPC) mechanism. The communication relies on a one-shot IPC server running within the Zotify API process. This avoids complexities of other IPC methods while remaining secure and cross-platform.",
  "/root/zotify-API/project/archive/docs/snitch/PHASE_2_SECURE_CALLBACK.md": "This document outlines the implementation of secure OAuth callback handling in the Snitch module. The primary goal of Phase 2 is to prevent Cross-Site Request Forgery (CSRF) attacks during the OAuth 2.0 authorization flow. This is achieved by using a `state` token.",
  "/root/zotify-API/project/archive/docs/snitch/TEST_RUNBOOK.md": "This document provides instructions for manually testing the Snitch listener. The Snitch application is built from the `snitch/` directory. The listener should eventually time out after 2 minutes if no valid request is sent.",
  "/root/zotify-API/project/archive/docs/projectplan/spotify_fullstack_capability_blueprint.md": "This document outlines the strategy for exposing Spotify and Librespot features through the Zotify API. It expands on the initial [Spotify Capability Audit] and serves as the definitive guide for all future development work related to Spotify.",
  "/root/zotify-API/project/logs/chat/combined_chats_manifest.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/logs/chat/Manifest_review_and_mapping_manifest.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/archive/docs/projectplan/security.md": "This document outlines the security architecture, principles, and roadmap for the Zotify API project. It serves as the definitive security reference for developers, operators, and stakeholders. All communication with the API is encrypted using TLS.",
  "/root/zotify-API/project/logs/chat/Manifest_review_and_mapping_002.md": "Update the `make_manifest.py script so that instead of generating a Markdown file (`REPO_MANIFEST.md', it creates a ZIP archive containing the repository manifest. This will make large manifests easier to handle, transfer, and avoid environment file size limits.",
  "/root/zotify-API/project/logs/chat/File_linting_review.md": "The linter is configured to fail commits if new files aren't registered, addressing the backlog of misalignment. The current linter logic is file-based, meaning it checks if files are referenced by name in key documents. The intended purpose of documents like `ALIGNMENT_MATRIX.md` is to map items (tasks, enhancements, proposals) across",
  "/root/zotify-API/project/logs/chat/File_linting_review_manifest.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/logs/chat/Manifest_review_and_mapping_001.md": "The project is currently in **API Phase 5b**, with governance, QA, and documentation workflows partially implemented and audited. This session has finalized **workflow mappings, incremental task definitions, and a repo manifest that captures the full repo content offline.",
  "/root/zotify-API/snitch/docs/STATUS.md": "This document provides a live view of the project's progress. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/project/logs/chat/Manifest_review_and_mapping.md": "The project is currently in **API Phase 5b**, with governance, QA, and documentation workflows partially implemented and audited. This session has finalized **workflow mappings, incremental task definitions, and a repo manifest that captures the full repo content offline.",
  "/root/zotify-API/snitch/docs/TASKS.md": "Summarize the following documentation clearly and concisely. Highlight key concepts and functions",
  "/root/zotify-API/snitch/docs/MODULES.md": "The Snitch application has been refactored into a single, self-contained Go file to resolve a persistent build issue. This single file contains the entire implementation for the `snitch` executable. Summarize the following documentation clearly and concisely.",
  "/root/zotify-API/snitch/docs/PHASE_2_SECURE_CALLBACK.md": "This design has been superseded by the \"Zero Trust\" model. This provides a higher level of security, including end-to-end encryption and replay attack prevention.",
  "/root/zotify-API/snitch/docs/phase5-ipc.md": "This document outlines the secure Inter-Process Communication (IPC) mechanism. The communication relies on a one-shot IPC server running within the Zotify API process. This avoids complexities of other IPC methods while remaining secure and cross-platform.",
  "/root/zotify-API/snitch/docs/MILESTONES.md": "This document tracks key project milestones and events. Summarize the following documentation clearly and concisely. Highlight key concepts and functions.",
  "/root/zotify-API/snitch/docs/PHASE_2_ZERO_TRUST_DESIGN.md": "This document specifies a new, more robust security design for the Snitch OAuth callback flow, built on Zero Trust principles. It replaces the previous \"Secure Callback\" design with a model that provides end-to-end encryption for the sensitive authorization `code'",
  "/root/zotify-API/snitch/docs/ARCHITECTURE.md": "Snitch is a minimal, self-contained Go application that acts as a temporary, local callback listener for OAuth 2.0 flows. Its architecture is designed around a Zero Trust security model, where the sensitive authorization `code` is protected with end-to-end encryption.",
  "/root/zotify-API/snitch/docs/TEST_RUNBOOK.md": "As of Phase 5, Snitch is tightly integrated with the main Zotify API application and is no longer intended to be run manually. The primary method for testing its logic is through the automated unit tests. This document provides instructions for testing the Snitch listener.",
  "/root/zotify-API/snitch/docs/PHASES.md": "This document provides a more detailed breakdown of the tasks required for each development phase. Highlight key concepts and functions.",
  "/root/zotify-API/snitch/docs/USER_MANUAL.md": "Snitch is a small helper application designed to securely handle the final step of an OAuth 2.0 authentication flow for command-line or headless applications. It catches the redirect, grabs the secret authentication code, and securely passes it back to the main application.",
  "/root/zotify-API/snitch/docs/ROADMAP.md": "This document outlines the high-level, phased development plan for the Snitch subproject. Highlight key concepts and functions: <!-- ID: API-264 -->",
  "/root/zotify-API/snitch/docs/PROJECT_PLAN.md": "The Snitch module is a critical security and integration component of the Zotify API platform. Its primary purpose is to provide a secure, reliable, and user-friendly mechanism for handling the browser-based OAuth 2.0 callback during CLI-driven authentication flows.",
  "/root/zotify-API/openapi.json": "Focus on functionality, modules, and architecture. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/snitch/docs/INSTALLATION.md": "GoSnitch is written in Go and requires a recent version of the Go toolchain to build and run. To install Go on Linux (Debian/Ubuntu):**. Download the latest Go binary (check go.dev/dl/ for the latest version) Go1.21.0.linux-amd64.tar.gz. To run Snitch on Windows:",
  "/root/zotify-API/mkdocs.yml": "MkDocs Configuration is a comprehensive guide to the Zotify API Platform. The 'monorepo' plugin will discover and merge other mk docs.yml files.",
  "/root/zotify-API/bandit.yml": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture. # ID: CF",
  "/root/zotify-API/.pre-commit-config.yaml": "The code is written in Python. It is intended to be used in a variety of ways. The source code is split into several parts. The code is available on GitHub.",
  "/root/zotify-API/scripts/verify_alignment_migration.py": "The source code for OPS-036 is available on GitHub. The code is written in python3. It is intended to be used in a production environment.",
  "/root/zotify-API/scripts/project_registry.json": "Focus on functionality, modules, and architecture. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/generate_alignment_matrix_md.py": "pyConverts ALIGNMENT_MATRIX.yml back into a readable Markdown version.",
  "/root/zotify-API/scripts/backfill_trace_meta.py": "Backfill_trace_meta.py is a one-time script to backfill metadata into TRACE_INDEX.yml. It is designed to be idempotent, meaning it can be run multiple times without destroying or duplicating data.",
  "/root/zotify-API/scripts/description_compliance_check.py": "Parses the new, unified markdown table format. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/generate_endpoints_doc.py": "This file lists all public API endpoints for the Zotify API project, generated from the OpenAPI schema. It provides a high-level reference for developers, operators, and auditors. The file is auto-generated. Do not edit it manually.",
  "/root/zotify-API/scripts/repo_inventory_and_governance.py": "Repo_ inventory_and_governance.py - inventory + governance index generator (patched)Fixes applied: ensure PROJECT_ROOT is resolved correctly to avoid walking the entire filesystem. Robustly ignore directories by checking path parts (so `project/logs/chat` can be ignored). Exclude chat logs explicitly from registration logic to remove them from Un",
  "/root/zotify-API/scripts/test_auth_flow.py": "The source code for OPS-029 is available on GitHub. The code is written in Python and includes the following modules.",
  "/root/zotify-API/scripts/migrate_alignment_matrix.py": "Parses the legacy ALIGNMENT_MATRIX.md and generates a normalized ALIGNMENTS_MATriX.yml. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/linter.py": "Linter and Logger for the repository. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/repo_governance.py": "The code is written in python. The source code is called OPS-024. The code is split into three parts: modules, functionality, modules, and architecture. Focus on functionality and modules.",
  "/root/zotify-API/scripts/run_e2e_auth_test.sh": "A script to run a full end-to-end test of the Spotify authentication flow. It involves both the Python API and the Go Snitch service. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/reorder_trace_index_keys.py": "The source code is written in python3. It contains the main logic of the reorder_items function. It also contains the code to put keys in preferred order.",
  "/root/zotify-API/scripts/verify_governance.py": "Checks that all governance-related files in project/*/ are present in PROJECT_REGISTRY.md. Ignores code files, archive junk, and other non-governance paths by default.",
  "/root/zotify-API/scripts/start.sh": "The application now uses a sensible default for local development if the APP_ENV variable is not set. The DATABASE_URI check has been removed. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/generate_openapi.py": "The source code for OPS-012 is available on GitHub. The source code explains the purpose and main logic of the project. Focus on functionality, modules, and architecture: \"OPs-012\" and \"OPS-012-1\"",
  "/root/zotify-API/scripts/audit_api.py": "The app imports the FastAPI app, discovers all GET routes that don't require path parameters, and then sends a request to each one to check its status. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/lint_governance_links.json": "Focus on functionality, modules, and architecture. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/manage_docs_index.py": "The source code for OPS-019 is available on GitHub. The main function of the project is to manage the documentation quality index. The module name is used for simplicity.",
  "/root/zotify-API/scripts/propagate_descriptions.py": "The source code is written in python3. It runs in dry-run mode. The source code includes the main, main and main modules.",
  "/root/zotify-API/scripts/trace_description_generator.py": "Scans the repository for documentation and source code files. Summarizes their contents, and saves descriptions to an intermediate JSON file. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/build_project_registry.py": "Builds a machine-readable project registry from the TRACE_INDEX.yml. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/lint_governance_links.py": "Lint Governance Links Script generates PROJECT_DOCUMENT_ALIGNMENT.md and lint_governance_links.json. Tracks document alignment based on TRACE_INDEX.yml and project/*.md files. Handles three formats: 1. A dictionary with an \"artifacts\" key holding a list of file objects. 2. A direct",
  "/root/zotify-API/scripts/semantic_alignment_check.py": "Parses CONTENT_ALIGNMENT_REPORT.md to find files marked as fully aligned. Use regex to find the 'Fully Aligned' row and check its count. Return all registered files since the report says they are all aligned.",
  "/root/zotify-API/scripts/doc-lint-rules.yml": "This file defines the \"documentation matrix\" for the custom linter. It maps changes in source code paths to required changes in documentation files. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/make_manifest.py": "Self-checking repository manifest generator. Regenerates manifest only if there are staged changes. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/fix_tag_inventory.py": "The source code for OPS-061 is available on GitHub. The code is written in python3 and includes a number of modules.",
  "/root/zotify-API/scripts/validate_code_index.py": "Parses the code index markdown file and returns a set of file paths. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/functional_test.py": "The source code for OPS-009 is available on GitHub. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/generate_repo_manifest.py": "The code is written in Python. The source code is called OPS-013. It is intended to be used in a variety of ways. The code includes the following:",
  "/root/zotify-API/scripts/migrate_and_tag_repository.py": "Scans the entire repository, applies unique, file-type-aware ID tags to allrelevant files, and generates a comprehensive inventory. This script is the first step in the two-tier document and task alignment system migration. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/scripts/test_single_config.sh": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: OPS-030.",
  "/root/zotify-API/scripts/audit_endpoints.py": "import inspect from OPS, FastAPI, APIRoute, Path, Pathlib. Add the project source to the Python path. Look for '501' or 'NotImplementedError' in source code to flag stubs.",
  "/root/zotify-API/scripts/fix_trace_index_paths.py": "The source code is written in python3. The main logic of the program is explained in the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/scripts/content_alignment_check.py": "The code is written in python and is called OPS-006. It is a lockdown version of python 3.3. The code is called \"Content Alignment Check\"",
  "/root/zotify-API/scripts/test_full_pipeline.sh": "The source code for OPS-035 is available on GitHub. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/snitch/snitch.go": "snitch is a small helper application for the Zotify API. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-272.",
  "/root/zotify-API/snitch/mkdocs.yml": "This mkdocs.yml file is intended to be included by the root mk docs. The site_name will be used as the directory name in the final documentation. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/snitch/.golangci.yml": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-252. Run: run; timeout: 5m; enable: enable; enable",
  "/root/zotify-API/project/ALIGNMENT_MATRIX.yml": "Source code for the API Routes Layer. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: DOC-072- id: AR-001.",
  "/root/zotify-API/api/alembic.ini": "The API-246 database configuration is a generic, single database configuration. The default rendered in new alembic.ini files is \"os\", which uses os-dependent path splitting. The path separator used here should be the separator specified by \"path_separator\" below.",
  "/root/zotify-API/api/logging_framework.yml": "The source code for the Flexible Logging Framework is available on GitHub. Use this source code to help you with reading comprehension and vocabulary.",
  "/root/zotify-API/api/mypy.ini": "The API-249 source code explains the purpose and main logic of the project. Focus on functionality, modules, and architecture: # ID: API-251.",
  "/root/zotify-API/nlp/__init__.py": "Empty file.",
  "/root/zotify-API/nlp/nlp_engine.py": "Empty file.",
  "/root/zotify-API/api/logging_config.yml": "API Logging Configuration defines handlers for the LoggingService. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/nlp/description_builder.py": "The code is written in Python. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/nlp/tagger.py": "Empty file.",
  "/root/zotify-API/nlp/summarizer.py": "The source code for the nlp/summarizer.py program is available on GitHub. The code is written in Python and includes the following modules:",
  "/root/zotify-API/api/api_dumps/logging.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules,",
  "/root/zotify-API/tests/scripts/test_build_project_registry.py": "Tests for the corrected build_project_registry script. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/api_dumps/system.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/tracks.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/cache.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules,",
  "/root/zotify-API/api/api_dumps/network.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules,",
  "/root/zotify-API/api/api_dumps/user.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/metadata.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/sync.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/stubs.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/downloads.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/playlist.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/api_dumps/spotify.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/tests/test_network.py": "Fixture to override the network service with a predictable state. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/test_notifications.py": "import pytest from fastapi-testclient. import TestClient from sqlalchemy. import crud from zotify_api.schemas. import user as user_ schemas, notifications as notification_schem as. Use the source code to understand the code.",
  "/root/zotify-API/api/tests/test_download.py": "Source code for the API-237 project is available on GitHub. The custom, module-level database setup has been removed. The test file will now use the fixtures defined in conftest.py.",
  "/root/zotify-API/api/tests/__init__.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/tests/test_tracks.py": "The API-242 source code is written in Python. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture of the API.",
  "/root/zotify-API/api/tests/test_system.py": "The API-241 source code is available on GitHub. Use this source code to help you understand the API.",
  "/root/zotify-API/api/tests/test_user.py": "import pytest from fastapi-testclient. import TestClient from sqlalchemy. import User from zotify_api.schemas. import user as user_schem as. Use the following source code.",
  "/root/zotify-API/api/tests/test_config.py": "The API-236 source code is available on GitHub. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/test_playlists.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-240. import Any. import MagicMock. import TestClient.",
  "/root/zotify-API/api/tests/conftest.py": "The API-234 source code is written in Python. It includes the TestClient fixture and the Base provider interface. The database dependency is also overridden to use the test_db_session fixture.",
  "/root/zotify-API/api/tests/test_cache.py": "Fixture to override the cache service with a predictable state. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/alembic/env.py": "The API-207 API is available on GitHub. The source code for this guide is available here. Use this guide to help you understand the API.",
  "/root/zotify-API/api/alembic/versions/5f96175ff7c9_add_notifications_enabled_to_.py": "The API-209 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture. Add notifications_enabled to UserPreferences.",
  "/root/zotify-API/api/tests/unit/test_logging_config.py": "The API-220 source code explains the purpose and main logic of setup_logging. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_playlists_service.py": "The API-225 source code includes the PlaylistsService and Playlists service modules. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_spoti_client.py": "The API-227 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_crud.py": "The API-214 source code is available on GitHub. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_sync.py": "The API-228 source code is available on GitHub. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_network_service.py": "The API-222 source code explains the purpose and main logic of the project. Focus on functionality, modules, and architecture. Explain the purpose of the API and the main logic.",
  "/root/zotify-API/api/tests/unit/test_config.py": "The original tests in this file were specific to a complex __init__ method that has been removed and refactored. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/api/tests/unit/test_cache_service.py": "The API-212 source code explains the purpose and main logic of the Cache service. Focus on functionality, modules, and architecture: # ID: API- 212.",
  "/root/zotify-API/api/tests/unit/test_user_service_db.py": "The API-231 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_auth.py": "The API-211 source code is written in Python. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture. Explain the purpose of the source code and the main logic.",
  "/root/zotify-API/api/tests/unit/test_new_logging_system.py": "The API-223 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_metadata_service.py": "import pytest from zotify_api.schemas.metadata import MetadataUpdatefrom zotified_services.metadata_service import Met metadata.pytest.py test_get_metadata_exists( metadata_service: MetadataService) test_patch_metadata.not_existing(metadata_ service: Met metadataService) assert metadata[\"rating",
  "/root/zotify-API/api/tests/unit/test_tracks_service.py": "The API-229 source code is available on GitHub. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_webhooks.py": "The API-232 test suite is written in Python. The code is written with the following modules: MagicMock, MonkeyPatch, fastapi.testclient, TestClient.",
  "/root/zotify-API/api/tests/unit/test_search.py": "The source code for the search engine is available on GitHub. The API-226 version of the search app is available at GitHub. Use the source code to help you understand the API.",
  "/root/zotify-API/api/tests/unit/test_error_handler.py": "The API-216 source code includes a mock logger to capture log messages. It also includes a fixture to automatically reset the singleton before and after each test.",
  "/root/zotify-API/api/tests/unit/test_error_handler_actions.py": "The API-217 source code explains the purpose and main logic of the API. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_jwt_auth_db.py": "The source code is available on GitHub. Use the source code to understand the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: 219.",
  "/root/zotify-API/api/tests/unit/test_flexible_logging.py": "The API-218 source code is available on GitHub. The source code explains the purpose and main logic of the following code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_notifications_service.py": "The API-224 source code is written in Python. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/test_user_service.py": "The API-230 source code is written in Python. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API- 230.",
  "/root/zotify-API/api/tests/unit/test_deps.py": "The API-215 source code explains the purpose and main logic of the project. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/tests/unit/providers/test_spotify_connector.py": "The API-210 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture of the API.",
  "/root/zotify-API/api/docs/system/zotify-openapi-external-v1.json": "Zotify is a free, open-source streaming music service. It uses the OpenAPI specification. The source code for the service is available on GitHub.",
  "/root/zotify-API/api/src/storage/spotify_tokens.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: { \"access_token\": \"new_fake_token\", \"refresh",
  "/root/zotify-API/api/docs/system/zotify-openapi-external-v1.yaml": "Zotify's external API endpoints are used by download clients, external tools, or third-party integrations. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/api/src/zotify_api/logging_config.py": "import logging.basicConfig(level=logging.INFO) # ID: API-049. Focus on functionality, modules,",
  "/root/zotify-API/api/src/zotify_api/config.py": "Pydantic's BaseSettings now handles loading from environment variables. If no key is set via ENV and no key file exists, raise an error in prod. The complex __init__ method was removed.",
  "/root/zotify-API/api/src/zotify_api/temp_violation.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/src/zotify_api/globals.py": "API-048 is a set of modules designed to make it easier for developers to build apps. The API is written in a single",
  "/root/zotify-API/api/src/zotify_api/main.py": "import logging as py_logging. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.import os from datetime. import datetime, timezone. import typing. import Any, Dict, Optional, cast.import yaml from fastapi.",
  "/root/zotify-API/api/src/zotify_api/auth_state.py": "The API-025 source code for Spotify's OAuth2 service is available on GitHub. It's written in Python and includes a logging module and a PKCE state management module. The code is intended to be used in production.",
  "/root/zotify-API/api/src/zotify_api/routes/config.py": "The API-060 source code is available on GitHub. The source code explains the purpose and main logic of the API. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/routes/network.py": "The API-063 source code is available on GitHub. The source code explains the purpose and main logic of the API. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/routes/webhooks.py": "The API-071 source code explains the purpose and main logic of the webhook service. Focus on functionality, modules, and architecture: # ID: API-71.",
  "/root/zotify-API/api/src/zotify_api/routes/notifications.py": "The API-064 source code is written in Python. It includes the notification service and the notification module. The code is intended to be read-only for now.",
  "/root/zotify-API/api/src/zotify_api/routes/cache.py": "The API-059 source code is available on GitHub. The source code explains the purpose and main logic of the API.",
  "/root/zotify-API/api/src/zotify_api/routes/search.py": "The API-066 source code is written in Python. It includes the search service and the database engine. The code is split into two parts: search and database. The search service is called search_service. The database is called database.",
  "/root/zotify-API/api/src/zotify_api/routes/__init__.py": "This file makes the 'routes' directory a Python package. Explain the purpose and main logic",
  "/root/zotify-API/api/src/zotify_api/routes/tracks.py": "The API-069 source code is written in Python. It includes the following code: # ID: API- 069. The code is broken into several modules. The main logic of the code is explained in the source code.",
  "/root/zotify-API/api/src/zotify_api/routes/auth.py": "The API-058 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/routes/playlists.py": "The API-065 source code explains the purpose and main logic of the application. Focus on functionality, modules, and architecture. Use the following source code.",
  "/root/zotify-API/api/src/zotify_api/routes/downloads.py": "The API-061 source code is written in Python. It is intended to be used in a production-ready version of Python 2.5 or later. The source code includes the following modules: download, retry, process, and get.",
  "/root/zotify-API/api/src/zotify_api/routes/sync.py": "The API-067 source code explains the purpose and main logic of the API. Focus on functionality, modules, and architecture: # ID: API- 067.",
  "/root/zotify-API/api/src/zotify_api/routes/jwt_auth.py": "The API-062 source code explains the purpose and main logic of the application. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/routes/user.py": "The API-070 source code is written in Python. It includes the following modules: user, profile, preferences, and history.",
  "/root/zotify-API/api/src/zotify_api/routes/system.py": "The API-068 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API- 068. import os, platform, typing, and time. import LoggingFrameworkConfig, ValidationError, StandardResponse.",
  "/root/zotify-API/api/src/zotify_api/models/config_models.py": "The code is written in C#. It is intended to be used as a framework for a number of modules. The code is broken down into several modules: BaseModel, Config, and ConfigUpdate.",
  "/root/zotify-API/api/src/zotify_api/models/sync.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API",
  "/root/zotify-API/api/src/zotify_api/schemas/download.py": "The API-074 source code is available on GitHub. The source code includes the following source code. Use this source code to help you understand the API and its features.",
  "/root/zotify-API/api/src/zotify_api/middleware/request_id.py": "The API-051 source code explains the purpose and main logic of the project. Focus on functionality, modules, and architecture. Explain the purpose of the API and the main logic for the application.",
  "/root/zotify-API/api/src/zotify_api/schemas/network.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-078.",
  "/root/zotify-API/api/src/zotify_api/schemas/spotify.py": "This file is now empty as the schemas have been moved to more appropriate locations. Explain the purpose and main logic of the following source code. Focus",
  "/root/zotify-API/api/src/zotify_api/schemas/logging_schemas.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-076.",
  "/root/zotify-API/api/src/zotify_api/schemas/webhooks.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-085.",
  "/root/zotify-API/api/src/zotify_api/schemas/notifications.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-079 from pydantic import BaseModel.",
  "/root/zotify-API/api/src/zotify_api/schemas/cache.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-073. import Dict, Optional, BaseModel, Field. import CacheClearRequest, CacheStatusResponse.",
  "/root/zotify-API/api/src/zotify_api/schemas/tracks.py": "The API-083 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-087.",
  "/root/zotify-API/api/src/zotify_api/schemas/auth.py": "The API-072 source code explains the purpose and main logic of the Spotify app. Focus on functionality, modules, and architecture: # ID: API-72.",
  "/root/zotify-API/api/src/zotify_api/schemas/metadata.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture. # ID: API-077.",
  "/root/zotify-API/api/src/zotify_api/schemas/playlists.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/schemas/generic.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-075.",
  "/root/zotify-API/api/src/zotify_api/schemas/system.py": "The API-082 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/schemas/user.py": "The API-084 source code explains the purpose and main logic of the following code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/storage/user_data.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/providers/__init__.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/src/zotify_api/providers/spotify_connector.py": "The API-056 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture. It uses the SpotiClient to interact with the Spotify API. It is a Provider connector for the Spotify music service.",
  "/root/zotify-API/api/src/zotify_api/providers/base.py": "The base class for a music service provider. Defines the interface that all provider connectors must implement. Handles the callback from the OAuth2 provider. This processes the authorization code or an error.",
  "/root/zotify-API/api/src/zotify_api/database/__init__.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/src/zotify_api/database/session.py": "The API is a FastAPI dependency that provides a database session for a single request. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: API-047.",
  "/root/zotify-API/api/src/zotify_api/database/models.py": "The API-046 source code is written in Python. The code includes an association table for playlists and tracks. It also has a simple role system for future use. The source code also includes an ORM model.",
  "/root/zotify-API/api/src/zotify_api/database/crud.py": "The API-045 project is written in Python. The main logic of the DownloadJob CRUD function is explained in the following source code. The DownloadJob module is used to create and update download jobs in the database.",
  "/root/zotify-API/api/src/zotify_api/services/sync_service.py": "The functions in this module are designed to be called from the API layer. The dependencies are injected into the functions, which makes them easy to test. This module contains the business logic for the sync subsystem.",
  "/root/zotify-API/api/src/zotify_api/services/notifications_service.py": "The API-097 source code explains the purpose and main logic of the application. Focus on functionality, modules, and architecture. Explain the purpose of the API and the main logic.",
  "/root/zotify-API/api/src/zotify_api/services/spoti_client.py": "The source code for the Spotify API is available on GitHub. The API has an ID of API-100.",
  "/root/zotify-API/api/src/zotify_api/services/user_service.py": "The API-103 API is designed to provide a single, easy-to-use RESTful API. The API is built on top of the zotify_api.schemas module. The code is written in Python and includes the following modules. The source code is available on GitHub.",
  "/root/zotify-API/api/src/zotify_api/services/playlists_service.py": "The API-098 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID:api/src/zotify_api/services/playlists_servicepy.import loggingfrom typing import Any, Dict, List, Optional, Tuple from fastapi. import Depends from sqlalchemy.",
  "/root/zotify-API/api/src/zotify_api/services/webhooks.py": "The API-104 source code explains the purpose and main logic of the project. Focus on functionality, modules, and architecture. Explain the purpose of the API and the main logic in the code.",
  "/root/zotify-API/api/src/zotify_api/services/metadata_service.py": "The API-095 source code explains the purpose and main logic of the API. Focus on functionality, modules, and architecture. Explain the purpose of the source code.",
  "/root/zotify-API/api/src/zotify_api/services/db.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-090.",
  "/root/zotify-API/api/src/zotify_api/services/search.py": "The API-099 source code is written in Python. It includes the following modules: Base Provider, Engine, Tuple, List, Dict, and Tuple. It also includes a fallback to spotify search if the DB fails.",
  "/root/zotify-API/api/src/zotify_api/services/download_service.py": "The API-092 module is designed to simulate a background worker. It adds new download jobs to the database queue. This method is called manually to simulate the download process.",
  "/root/zotify-API/api/src/zotify_api/services/config_service.py": "This module contains the business logic for the config subsystem. The functions in this module are designed to be called from the API layer. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/api/src/zotify_api/services/jwt_service.py": "The API-093 source code is written in Python. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API- 093.",
  "/root/zotify-API/api/src/zotify_api/services/__init__.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules",
  "/root/zotify-API/api/src/zotify_api/services/deps.py": "The API-091 source code is written in Python. It includes the SpotiClient dependency that provides a fully authenticated Spoti client. It handles token loading, validation, and refreshing. The API is a FastAPI dependency. The Spotify Connector dependency provides a Spotify connector.",
  "/root/zotify-API/api/src/zotify_api/services/logging_service.py": "The API-094 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/services/auth.py": "The API-087 source code is written in Python. It is intended to be used by Spotify's Spotify app. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/services/cache_service.py": "The API-088 Cache service module contains the business logic for the cache subsystem. The functions in this module are designed to be called from the API layer.",
  "/root/zotify-API/api/src/zotify_api/services/tracks_service.py": "The API-102 source code is written in Python. It includes the logging, logging, and logging module. It also includes the get_tracks and get_db_engine functions.",
  "/root/zotify-API/api/src/zotify_api/services/network_service.py": "The functions in this module are designed to be called from the API layer. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/core/logging_framework/__init__.py": "API-035 is a public API for the flexible logging framework. Developers should use this function to log events. It provides a stable interface that is decoupled from the service implementation.",
  "/root/zotify-API/api/src/zotify_api/core/logging_framework/service.py": "The API-038 source code is available on GitHub. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/core/logging_framework/schemas.py": "The API-037 source code is available on GitHub. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/core/logging_handlers/__init__.py": "This file makes the 'logging_handlers' directory a Python package. Explain the purpose and main",
  "/root/zotify-API/api/src/zotify_api/core/logging_framework/filters.py": "A logging filter that redacts sensitive data from log records. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/core/logging_handlers/base.py": "The base class for all log handlers is BaseLog Handler. Can_handle determines if the handler should process a log message with the given level. Formats the log record into the desired output format. Explain the purpose and main logic of the following source code.",
  "/root/zotify-API/api/src/zotify_api/core/logging_handlers/database_job_handler.py": "The API-042 code is written in Python. The DatabaseJob Handler is a log handler that writes job status updates to the database. The JobLog function updates a job log entry in the database and creates a new one. The logging function updates the status of a job entry.",
  "/root/zotify-API/api/src/zotify_api/core/logging_handlers/console_handler.py": "The source code for the API-041 console module is available on GitHub. The code includes the BaseLog handler and the ConsoleHandler module.",
  "/root/zotify-API/api/src/zotify_api/core/logging_handlers/json_audit_handler.py": "The JsonAudit Handler is used to write structured JSON audit logs to a file. The code is written in Python. The API is called API-043. The source code is available on GitHub.",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/config.py": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID: API-031.",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/__init__.py": "The API-027 module defines the public API of the logging platform. It also defines a class for handling unhandled exceptions across the platform. Explain the purpose and main logic of the source code.",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/triggers.py": "The API-034 source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/hooks.py": "The API-033 API is available on GitHub. The FastAPI module is used to register a global exception handler for the FastAPI application. The error handler handles exceptions for non-FastAPI contexts (e.g., background tasks) It also handles exceptions in the main thread and non-async contexts.",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/formatter.py": "The API-032 source code is written in Python. It is intended to be used by the JsonFormatter and PlainTextFormatter modules. The source code explains the purpose and main logic of the following code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/actions/__init__.py": "This file makes the 'actions' directory a Python package. Explain the purpose and main logic of",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/actions/log_critical.py": "The API-029 logging framework is based on the Zotify API. The code is written in Python. It is intended to be used to log events.",
  "/root/zotify-API/api/src/zotify_api/core/error_handler/actions/webhook.py": "The API-030 API is used to send notifications to a webhook. The source code explains the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: # ID:API-030.import loggingimport Dictimport Any, Dict, logging. import httpx.",
  "/root/zotify-API/Gonk/GonkUI/app.py": "The code is written in Python and uses the Flask framework. It uses the same default dev key as the main API for convenience. The project root is added to the python path. Use the project root to add the project to the Python path.",
  "/root/zotify-API/Gonk/GonkUI/mkdocs.yml": "Documentation. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/Gonk/GonkCLI/__init__.py": "This file makes Gonk/GonkCLI a Python package. Explain the purpose and main",
  "/root/zotify-API/Gonk/GonkCLI/main.py": "GonkCLI is a command-line tool for interacting with the Zotify API. The API-005 version of Gonk is available on GitHub. The source code is available here.",
  "/root/zotify-API/Gonk/GonkCLI/tests/test_jwt_mock.py": "The source code for the API-009 project is available on GitHub. Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/Gonk/GonkCLI/tests/__init__.py": "This file makes Gonk/GonkCLI/tests a Python package. Explain the purpose and",
  "/root/zotify-API/Gonk/GonkCLI/modules/__init__.py": "This file makes Gonk/GonkCLI/ modules a Python package. Explain the purpose and",
  "/root/zotify-API/Gonk/GonkCLI/modules/jwt_mock.py": "The API-007 source code explains the purpose and main logic of the JWTClient. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/Gonk/GonkUI/static/styles.css": "The source code is written in C#. The code is broken down into modules. The modules are designed to be used in a variety of different ways.",
  "/root/zotify-API/Gonk/GonkUI/static/app.js": "Document.addEventListener('DOMContentLoaded', () => {. const endpointsList = document.getElementById(\"endpoints-list\"),. const spotifyLoginBtn =    const launchSqliteBtn, and. const stopSqlitesquizBtn. const themeToggleBtn means. document.body.classList.",
  "/root/zotify-API/Gonk/GonkUI/views/__init__.py": "This file makes Gonk/GonkUI/views a Python package. Explain the purpose and main",
  "/root/zotify-API/Gonk/GonkUI/views/jwt_ui.py": "The API-023 source code is written using flask and JWTClient. It includes a simple in-memory client for the test UI. In a real multi-user app, this would be handled differently.",
  "/root/zotify-API/Gonk/GonkUI/templates/index.html": "Gonk Test UI is a free, open-source, cross-platform app for Spotify. The app lets users log in to the service using the Spotify API. It also allows users to create their own playlists and playlists.",
  "/root/zotify-API/project/reports/ALIGNMENT_INTEGRITY_SNAPSHOT.yml": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture.",
  "/root/zotify-API/project/reports/TRACE_INDEX.yml": "The Gonk Command Line Interface (CLI) is a tool for interacting with the Zotify API from the command line. It is intended for developers who want to script interactions with the platform. This document serves as the master index for all documentation related to the GonkCLI.",
  "/root/zotify-API/project/reports/DOCUMENT_TAG_INVENTORY.yml": "Document the purpose and main logic of the following source code. Focus on functionality, modules, and architecture: DOC-067, AGENTS.md, project/PROJECT_REGISTRY.",
  "/root/zotify-API/project/api/endpoints.yaml": "Source code for Canonical API endpoint. Focus on functionality, modules, and architecture. Explain the purpose and main logic of the following code.",
  "/root/zotify-API/project/logs/chat/chats.py": "The source code for the chat app is available on GitHub. The code is written in Python and includes a number of modules. The main logic is to split messages into equal parts.",
  "/root/zotify-API/project/logs/conversations.json": "Explain the purpose and main logic of the following source code. Focus on functionality, modules, and architecture. Be casual, yet professional.",
  "/root/zotify-API/project/logs/chat/conversations.json": "When writing prompts for Jules LLM, they should define the end state clearly. Sound smart, grounded, direct like you're actually helping. Use normal language and grammar, avoid typical ai cliches."
}